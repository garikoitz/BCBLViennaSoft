function ResponseBoxDeviceNumber=pressKey2Begin(Display, onlyWaitKb, speak, ...                                                promptString, triggerKey,stimulus,...                                                DrawFirstTexture,ShiftStim, ...                                                MovingFixation)% pressKey2Begin(Display, [onlyWaitKb=1], [speak=0], ...% [promptString = 'please press any key to begin.'],[triggerKey = 'any'])%%   Displays 'please press any key to begin' on the SCREEN%   just below the center of the screen and waits for the%   user to press a key.%%   if onlyWaitKb flag is true (default), we'll try to only wait for%   internal keyboard keys (useful to avoid catching button presses from an%   external device).%% SEE ALSO clickMouse2Begin dispStringInCenter% 1/20/97 gmb wrote it.% 07/2005 SOD modified% 05/2008 RAS added 'speak' option. Defaults to 0, so it stops freaking me% out. :)% 07/2008 RAS there were 2 versions in the repository. I chose to keep the% one in screenUtils, removed the one in misc.% 08/2011 vistateam added triggerKey as optional input. If a single%       character experiment will wait for it to start scan. If 'any'%       wait for any key.if(~exist('onlyWaitKb','var') || isempty(onlyWaitKb))      onlyWaitKb = true;endif ispc    speak = false;elseif(~exist('speak','var') || isempty(speak))    speak = true;endif(~exist('triggerKey','var') || isempty(triggerKey))    triggerKey = 'any';endif(~exist('promptString','var') || isempty(promptString))    if strcmp(triggerKey,'bcbl')        promptString = 'Por favor no muevas los ojos del disco central y cuenta los cambios de colores';    if strcmp(triggerKey,'okazaki')        promptString = 'Please fixate your eyes in the disk and count colour changes, do not move your eyes during experiment';    else        promptString = 'Bitte den Punkt fixieren!';    endend%Prepare trigger chooserResponseBoxDeviceNumber=-1;Devices=PsychHID('Devices');DeviceArray={Devices.product}';switch triggerKey    case {'bcbl','okazaki'}        TriggerChooser=sum(strcmp(DeviceArray,'KeyWarrior8 Flex'));    otherwise        TriggerChooser=sum(strcmp(DeviceArray,'904'));end    if TriggerChooser ~= 0    switch triggerKey        case {'bcbl','okazaki'}            ResponseBoxes=find(strcmp(DeviceArray,'KeyWarrior8 Flex'));        otherwise            ResponseBoxes=find(strcmp(DeviceArray,'904'));    end        switch triggerKey        case {'prisma'}            ResponseBoxDeviceNumber=[ResponseBoxes(end-2),ResponseBoxes(end-1),ResponseBoxes(end)];            display(['[',mfilename,'] Response Box detected! We are on prisma. Device number set to ',num2str(ResponseBoxDeviceNumber),'.'])            display(['[',mfilename,'] ATTENTION: CAN BE DIFFERENT FOR DIFFERENT RESPONSE BOXES'])        case {'bcbl'}            ResponseBoxDeviceNumber=ResponseBoxes;            display(['[',mfilename,'] Response Box detected! We are on BCBL. Device number set to ',num2str(ResponseBoxDeviceNumber),'.'])            display(['[',mfilename,'] ATTENTION: CAN BE DIFFERENT FOR DIFFERENT RESPONSE BOXES'])            display('En el bcbl tiene que enviar una s')        case {'okazaki'}            ResponseBoxDeviceNumber=ResponseBoxes;            display(['[',mfilename,'] Response Box detected! We are on Okazaki. Device number set to ',num2str(ResponseBoxDeviceNumber),'.'])            display(['[',mfilename,'] ATTENTION: CAN BE DIFFERENT FOR DIFFERENT RESPONSE BOXES'])            display('In Okazaki qwe need an s')        otherwise            ResponseBoxDeviceNumber=ResponseBoxes(end);            display(['[',mfilename,'] Response Box detected! Device number set to ',num2str(ResponseBoxDeviceNumber),'.'])            display(['[',mfilename,'] ATTENTION: CAN BE DIFFERENT FOR DIFFERENT RESPONSE BOXES'])    endelse    display(['[',mfilename,'] No Response Box detected! Press 6 to start stimulus.'])    end%Display(['Ready! Listening to device #',num2str(ResponseBox)])Screen('FillRect', Display.windowPtr, Display.backColorRgb);%Draw Fixation aids before the actual stimulus starts (by drawing the final texture - used for blanks)if DrawFirstTexture    Screen('DrawTexture', Display.windowPtr, stimulus.textures(1), stimulus.srcRect, stimulus.destRect);else    Screen('DrawTexture', Display.windowPtr, stimulus.textures(end), stimulus.srcRect, stimulus.destRect);end%if exist('ShiftStim','var')%    drawFixation(Display,1,1,[],[],[],[],[],ShiftStim);%else%    drawFixation(Display);%endif iscell(promptString)    % multi-line input: present each line separately    nLines = length(promptString);    vRange = min(.4, .04 * nLines/2);  % vertical axis range of message    vLoc = 0.5 + linspace(-vRange, vRange, nLines); % vertical location of each line    textSize = 20;    oldTextSize = Screen('TextSize', Display.windowPtr, textSize);    charWidth = textSize/4.5; % character width    for n = 1:nLines        loc(1) = Display.rect(3)/2 - charWidth*length(promptString{n});        loc(2) = Display.rect(4) * vLoc(n);        Screen('DrawText', Display.windowPtr, promptString{n}, loc(1), loc(2), Display.textColorRgb, ShiftStim);    end    %drawFixation(Display);    Screen('Flip',Display.windowPtr);    Screen('TextSize', Display.windowPtr, oldTextSize);else    % single line: present in the middle of the screen    if exist('ShiftStim','var') && max(abs(ShiftStim))~=0        if exist('MovingFixation','var')            dispStringInCenter(Display, promptString, 0.55, 30,Display.textColorRgb,ShiftStim, MovingFixation);        else            dispStringInCenter(Display, promptString, 0.55, 30,Display.textColorRgb,ShiftStim);        end    else        dispStringInCenter(Display, promptString, 0.55, 30,Display.textColorRgb);    endend    if(speak)    % this will only work on mac and is put here for cases where the screens    % are mirrored and you may not see the 'go ahead' message.    try        system(sprintf('say %s','Stimulus is ready'));    catch ME        warning(ME.identifier, ME.message)    endend% KbWait and KbCheck are device dependentif onlyWaitKb && isfield(Display,'devices'),    % wait for input of experimentor only    while ~KbCheck(Display.devices.keyInputInternal),        WaitSecs(0.01); % give time back to OS - important    end;else    % We use KbCheck in a while loop instead of KbWait, as KbWait is    % reported to be unreliable and would need a device input as well.    %    % We can either wait for any key press (if triggerKey = 'any') or we    % can wait for a specific trigger key (if triggerKey has any other    % value)    %    iwait = 0;    if strcmpi('any', triggerKey)        while ~KbCheck(-1)            WaitSecs(0.01);        end    else  % wait for the specific key set by 'triggerKey'        switch triggerKey            case {'prisma'}                %randomly chosen at startup                KbQueueCreate(ResponseBoxDeviceNumber(1)); %7 Check only trigger box                KbQueueCreate(ResponseBoxDeviceNumber(2));                KbQueueCreate(ResponseBoxDeviceNumber(3));                KbQueueStart(ResponseBoxDeviceNumber(1));                KbQueueStart(ResponseBoxDeviceNumber(2));                KbQueueStart(ResponseBoxDeviceNumber(3));                triggerKeyNumber='6';                str=0;                                %Wait for Trigger Key. Numpad Numbers are different to top row                %numbers, which are followed by a ^ when detected                while sum(strcmp(str,triggerKeyNumber(1)))==0 && ...                        sum(strcmp(str,[triggerKeyNumber(1),'^']))==0                                        WaitSecs(0.001);                                        [~, ~, c1] = KbQueueCheck(ResponseBoxDeviceNumber(1));                    [~, ~, c2] = KbQueueCheck(ResponseBoxDeviceNumber(2));                    [~, ~, c3] = KbQueueCheck(ResponseBoxDeviceNumber(3));                    c=c1+c2+c3;                                        str = KbName(find(c));                end                KbQueueStop(ResponseBoxDeviceNumber(1));                KbQueueStop(ResponseBoxDeviceNumber(2));                KbQueueStop(ResponseBoxDeviceNumber(3));                            case {'bcbl'}                triggerKey = 's';                while ~iwait                    WaitSecs(0.01);                    [keyIsDown, ~, c] = KbCheck(-1);                    if keyIsDown                        str = KbName(find(c));                        % we just compare the first element in str and triggerKey                        % because if KbName and KbCheck when used togegther can                        % return unwanted characters (for example, KbName(KbCheck)                        % return '5%' when only the '5' key is pressed).                        if strcmpi(str(1), triggerKey(1))                            iwait = 1;                        end                    end                end            case {'okazaki'}                triggerKey = '5';                while ~iwait                    WaitSecs(0.01);                    [keyIsDown, ~, c] = KbCheck(-1);                    if keyIsDown                        str = KbName(find(c));                        % we just compare the first element in str and triggerKey                        % because if KbName and KbCheck when used togegther can                        % return unwanted characters (for example, KbName(KbCheck)                        % return '5%' when only the '5' key is pressed).                        if strcmpi(str(1), triggerKey(1))                            iwait = 1;                        end                    end                end                                            otherwise                % MANUAL + 7T TRIGGER                KbQueueCreate(-1);                KbQueueStart;                triggerKeyNumber='6';                str=0;                                %Wait for Trigger Key. Numpad Numbers are different to top row                %numbers, which are followed by a ^ when detected                while sum(strcmp(str,triggerKeyNumber(1)))==0 && ...                        sum(strcmp(str,[triggerKeyNumber(1),'^']))==0                    WaitSecs(0.001);                    [~, ~, c] = KbQueueCheck;                    str = KbName(find(c));                end                KbQueueStop;                        end    endendreturn;                                                                        